version: 2.1

orbs:
  heroku: circleci/heroku@1.0.1

jobs:
  checkout_code:
    docker:
      - image: cimg/base:stable

    steps:
      - checkout
      - save_cache:
          key: repo-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/project

  build_server:
    docker:
      - image: cimg/openjdk:14.0
      - image: mongo:latest
        environment:
          MONGO_INITDB_DATABASE: ntf-db-test

    steps:
      - restore_cache:
          keys:
            - repo-{{ .Environment.CIRCLE_SHA1 }}
            - repo-
      - restore_cache:
          keys:
            - m2-{{ checksum "backend/pom.xml" }}
            - m2-
      - run:
          command: |
            cd backend
            ./mvnw verify
          environment:
            SPRING_PROFILES_ACTIVE: ci
      - save_cache:
          paths:
            - ~/.m2
          key: m2-{{ checksum "backend/pom.xml" }}
      - store_test_results:
          path: backend/target/surefire-reports

  test_frontend:
    docker:
      - image: cimg/node:lts

    steps:
      - restore_cache:
          keys:
            - repo-{{ .Environment.CIRCLE_SHA1 }}
            - repo-
      - restore_cache:
          keys:
            - node-{{ checksum "frontend/package-lock.json" }}
            - node-
      - run:
          command: |
            cd frontend
            npm install
            npm test -- --runInBand --coverage --reporters=default --reporters=jest-junit
          environment:
            JEST_JUNIT_OUTPUT_DIR: ./reports/junit/
      - save_cache:
          paths:
            - ~/frontend/node_modules
          key: node-{{ checksum "frontend/package-lock.json" }}
      - store_artifacts:
          path: coverage
      - store_test_results:
          path: ~/frontend/reports/junit/
      - store_artifacts:
          path: ~/frontend/reports/junit

  deploy_frontend:
    docker:
      - image: cimg/node:lts

    steps:
      - restore_cache:
          keys:
            - repo-{{ .Environment.CIRCLE_SHA1 }}
            - repo-
      - restore_cache:
          keys:
            - node-{{ checksum "frontend/package-lock.json" }}
            - node-
      - run:
          command: |
            npx vercel --prod -c -t $VERCEL_TOKEN

workflows:
  build-and-deploy:
    jobs:
      - checkout_code:
          filters:
            branches:
              only: master

      - build_server:
          requires:
            - checkout_code
      - test_frontend:
          requires:
            - checkout_code

      - heroku/deploy-via-git:
          requires:
            - build_server
            - test_frontend
      - deploy_frontend:
          requires:
            - build_server
            - test_frontend
